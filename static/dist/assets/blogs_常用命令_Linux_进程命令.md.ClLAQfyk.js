import{_ as s,c as i,o as a,a4 as h}from"./chunks/framework.BOW58p_D.js";const y=JSON.parse('{"title":"进程命令","description":"","frontmatter":{},"headers":[],"relativePath":"blogs/常用命令/Linux/进程命令.md","filePath":"blogs/常用命令/Linux/进程命令.md"}'),n={name:"blogs/常用命令/Linux/进程命令.md"},l=h(`<h1 id="进程命令" tabindex="-1">进程命令 <a class="header-anchor" href="#进程命令" aria-label="Permalink to &quot;进程命令&quot;">​</a></h1><h2 id="ps-查看进程信息" tabindex="-1">ps 查看进程信息 <a class="header-anchor" href="#ps-查看进程信息" aria-label="Permalink to &quot;ps 查看进程信息&quot;">​</a></h2><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">## 查看当前系统中正在执行的各种进程信息</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ps</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ps</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -a</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  显示所有终端下执行的进程，包含其他用户的进程</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ps</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -A</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  显示所有进程</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ps</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -e</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  和-A功能一样</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ps</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -H</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  显示树状结构，表示程序间的相互关系</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ps</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  全格式显示进程</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ps</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> a</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   显示当前终端下执行的进程</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ps</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> c</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   显示进程的真实名称</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ps</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> e</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   列出程序所使用的环境变量</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ps</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   用ASCII字符显示树状结构，表达程序间的相互关系</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ps</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> x</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   显示所有进程，无论是否运行在终端上</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ps</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> u</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   显示用户相关的进程或者与用户相关的属性</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ps</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> r</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   只显示正在运行的进程</span></span></code></pre></div><h3 id="输出格式" tabindex="-1">输出格式 <a class="header-anchor" href="#输出格式" aria-label="Permalink to &quot;输出格式&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">USER</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> PID</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> %CPU</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> %MEM</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> VSZ</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> RSS</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> TTY</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> STAT</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> START</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> TIME</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> COMMAND</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">-</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   USER，进程拥有者</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">-</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   PID，运行着的命令</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">CMD</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">的进程编号</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">-</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   %CPU，该进程所占用CPU百分比</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">-</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   %MEM，该进程所占用内存百分比</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">-</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   VSZ，进程所占用的虚拟内存大小</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">-</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   RSS，进程所占用的实际内存大小</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">-</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   TTY，该进程运行在哪个终端上面，若与终端无关，则显示</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ?</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">-</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   STAT，进程状态</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">-</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   START，进程启动时间</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">-</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   TIME，进程实际占用CPU的时间</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">-</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   COMMAND，该进程对应的执行程序</span></span></code></pre></div><h3 id="进程状态码" tabindex="-1">进程状态码 <a class="header-anchor" href="#进程状态码" aria-label="Permalink to &quot;进程状态码&quot;">​</a></h3><ul><li><p><code>R</code>(TASK_RUNNING，可执行状态)，这个进程是可运行的——要么它正在运行，要么在运行队列中等待运行；</p></li><li><p><code>S</code>(TASK_INTERRUPTIBLE，中断状态)，这个状态的进程因为等待某事件的发生（比如等待socket连接、等待信号量等）而被挂起，然后当这些事件发生或完成后，对应的等待队列中的一个或多个进程将被唤醒。</p></li><li><p><code>D</code>(TASK_UNINTERRUPTIBLE，不可中断状态)，在进程接收到信号时，不会被唤醒变成可运行的。除了这一点，该状态和<code>S</code>状态其他部分完全一样，这个状态通常用于进程必须不间断等待或者事件发生的频率很快，并且无法用kill命令关闭处于<code>D</code>状态的进程。</p></li><li><p><code>T</code>(TASK_STOPPED或TASK_TRACED，暂停状态或跟踪状态)，该状态表示该进程已经停止执行，并且不具有再次执行的条件。向进程发送一个SIGSTOP信号，它就会因响应该信号而进入TASK_STOPPED状态（除非该进程本身处于<code>D</code>状态而不响应信号）。而当进程正在被跟踪时，它处于TASK_TRACED状态。</p></li><li><p><code>Z</code>(TASK_DEAD或EXIT_ZOMBIE，退出状态)，进程在退出的过程中，处于TASK_DEAD状态，如果它的父进程没有收到SIGCHLD信号，故未调用wait（如wait4、waitid）处理函数等待子进程结束，又没有显示忽略该信号，它就一直保持EXIT_ZOMBIE状态。只要父进程不退出，这个EXIT_ZOMBIE状态的子进程就一直存在，这也就是所谓的&quot;僵尸&quot;进程。</p></li><li><p><code>X</code>(TASK_DEAD - EXIT_DEAD，退出状态)，进程即将被销毁。EXIT_DEAD状态是非常短暂的，几乎不可能通过ps命令捕捉到。</p></li></ul><h3 id="常用参数" tabindex="-1">常用参数 <a class="header-anchor" href="#常用参数" aria-label="Permalink to &quot;常用参数&quot;">​</a></h3><h4 id="显示所有进程" tabindex="-1">显示所有进程 <a class="header-anchor" href="#显示所有进程" aria-label="Permalink to &quot;显示所有进程&quot;">​</a></h4><p>使用<code>-a</code>参数，<code>-a</code>代表 all。同时加上<code>x</code>参数会显示没有控制终端的进程，<code>x</code>参数表示显示所有进程，无论是否运行在终端上</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ps -ax</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">## 输出</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> PID</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> TTY</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">           TIME</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> CMD</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ??</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">         2:33.05</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /sbin/launchd</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">   67</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ??</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">         1:17.22</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /usr/libexec/logd</span></span></code></pre></div><p>该命令返回的结果会很长，为了方便查看，我们可以结合less命令和管道来使用：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ps -ax </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> less</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">## 输出</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> PID</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> TTY</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">           TIME</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> CMD</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ??</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">         2:33.05</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /sbin/launchd</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">   67</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ??</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">         1:17.22</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /usr/libexec/logd</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:</span></span></code></pre></div><h4 id="根据用户过滤进程" tabindex="-1">根据用户过滤进程 <a class="header-anchor" href="#根据用户过滤进程" aria-label="Permalink to &quot;根据用户过滤进程&quot;">​</a></h4><p>在需要查看特定用户进程的情况下，可以使用 <code>-u</code> 参数。比如要查询某个用户下的进程</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ps -u 用户名</span></span></code></pre></div><h4 id="显示包含用户信息的所有进程" tabindex="-1">显示包含用户信息的所有进程 <a class="header-anchor" href="#显示包含用户信息的所有进程" aria-label="Permalink to &quot;显示包含用户信息的所有进程&quot;">​</a></h4><p>通过<code>aux</code>三个参数可以查看所有进程的详细信息</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ps aux</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">## 输出</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">USER</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">               PID</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  %CPU</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> %MEM</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      VSZ</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    RSS</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   TT</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  STAT</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> STARTED</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      TIME</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> COMMAND</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">root</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">               128</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   2.7</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  0.1</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 33920056</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  14316</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   ??</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  Ss</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    1</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 170</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    4:14.27</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /u</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">user1</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">            49498</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   2.5</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  2.2</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1221722752</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 366836</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   ??</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  S</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">     1:16下午</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   0:34.26</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /A</span></span></code></pre></div><h4 id="根据进程名和pid来过滤" tabindex="-1">根据进程名和PID来过滤 <a class="header-anchor" href="#根据进程名和pid来过滤" aria-label="Permalink to &quot;根据进程名和PID来过滤&quot;">​</a></h4><p>通过使用<code>-C</code>参数，后面跟上进程名</p><p>比如像显示一个名称是<code>getty</code>的进程的信息，可以使用：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ps -C bash</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">## 输出</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  PID</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> TTY</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">          TIME</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> CMD</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> 2686</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pts/0</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    00:00:00</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> bash</span></span></code></pre></div><h4 id="根据进程查看线程" tabindex="-1">根据进程查看线程 <a class="header-anchor" href="#根据进程查看线程" aria-label="Permalink to &quot;根据进程查看线程&quot;">​</a></h4><p>使用<code>-L</code>参数，后面加上对应的进程的PID：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ps -L 2011</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">## 输出</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  PID</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   LWP</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> TTY</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      STAT</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   TIME</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> COMMAND</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> 2011</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  2011</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ?</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        Sl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">     0:25</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /usr/bin/gnome-shell</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> 2011</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  2012</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ?</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        Sl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">     0:00</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /usr/bin/gnome-shell</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> 2011</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  2014</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ?</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        Sl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">     0:00</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /usr/bin/gnome-shell</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> 2011</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  2015</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ?</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        Sl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">     0:00</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /usr/bin/gnome-shell</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> 2011</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  2028</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ?</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        Sl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">     0:00</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /usr/bin/gnome-shell</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> 2011</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  2029</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ?</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        Sl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">     0:00</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /usr/bin/gnome-shell</span></span></code></pre></div><h4 id="查看父进程信息" tabindex="-1">查看父进程信息 <a class="header-anchor" href="#查看父进程信息" aria-label="Permalink to &quot;查看父进程信息&quot;">​</a></h4><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">## 查看父进程信息</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ps -ef</span></span></code></pre></div><h4 id="树形显示进程" tabindex="-1">树形显示进程 <a class="header-anchor" href="#树形显示进程" aria-label="Permalink to &quot;树形显示进程&quot;">​</a></h4><p>可以通过参数<code>f</code>来实现：<code>ps -axf</code></p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ps -axf</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">## 输出</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> 1773</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ?</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        Sl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">     0:00</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  _</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> gdm-session-worker</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [pam/gdm-password]</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> 1791</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ?</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        Ssl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    0:00</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      _</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /usr/libexec/gnome-session-binary</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --session</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> g</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> 1965</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ?</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        Ss</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">     0:00</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">          _</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /usr/bin/ssh-agent</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /bin/sh</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -c</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> exec</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -l</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /bi</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> 2011</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ?</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        Sl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">     0:29</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">          _</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /usr/bin/gnome-shell</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> 2031</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ?</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        Sl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">     0:00</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">          |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">   _</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ibus-daemon</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --xim</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --panel</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> disable</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> 2036</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ?</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        Sl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">     0:00</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">          |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">       _</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /usr/libexec/ibus-dconf</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> 2267</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ?</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        Sl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">     0:00</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">          |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">       _</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /usr/libexec/ibus-engine-simple</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> 2162</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ?</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        Sl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">     0:03</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">          _</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /usr/libexec/gnome-settings-daemon</span></span></code></pre></div><h2 id="kill-强制杀掉进程" tabindex="-1">kill 强制杀掉进程 <a class="header-anchor" href="#kill-强制杀掉进程" aria-label="Permalink to &quot;kill 强制杀掉进程&quot;">​</a></h2><p>Linux中的kill命令用来终止指定的进程（terminate a process）的运行，是Linux下进程管理的常用命令。 通常，终止一个前台进程可以使用Ctrl+C键，但是，对于一个后台进程就须用kill命令来终止，我们就需要先获取进程PID，然后使用kill命令来杀掉该进程。</p><p>kill命令是通过向进程发送指定的信号来结束相应进程的。在默认情况下，采用编号为15的SIGTERM信号。</p><h3 id="命令格式" tabindex="-1">命令格式 <a class="header-anchor" href="#命令格式" aria-label="Permalink to &quot;命令格式&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">kill</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[参数][进程号]</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">## 强制杀死 pid 为 123 的进程</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">kill</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -9</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 123</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">kill</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -KILL</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 123</span></span></code></pre></div><h3 id="命令参数" tabindex="-1">命令参数 <a class="header-anchor" href="#命令参数" aria-label="Permalink to &quot;命令参数&quot;">​</a></h3><ul><li><code>-l</code> 信号，如果不加信号的编号参数，使用“-l”参数时会列出全部的信号名称</li><li><code>-a</code> 处理当前进程时，不限制命令名和进程号的对应关系</li><li><code>-p</code>指定 kill 命令只打印相关进程的进程号，而不发送任何信号</li><li><code>-s</code> 指定发送信号</li><li><code>-u</code> 指定用户</li></ul><h3 id="常用参数-1" tabindex="-1">常用参数 <a class="header-anchor" href="#常用参数-1" aria-label="Permalink to &quot;常用参数&quot;">​</a></h3><h4 id="列出所有信号名称" tabindex="-1">列出所有信号名称 <a class="header-anchor" href="#列出所有信号名称" aria-label="Permalink to &quot;列出所有信号名称&quot;">​</a></h4><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> kill -l</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">## 输出</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">HUP</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> INT</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> QUIT</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ILL</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> TRAP</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ABRT</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> EMT</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> FPE</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> KILL</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> BUS</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> SEGV</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> SYS</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> PIPE</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ALRM</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> TERM</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> URG</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> STOP</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> TSTP</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> CONT</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> CHLD</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> TTIN</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> TTOU</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> IO</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> XCPU</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> XFSZ</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> VTALRM</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> PROF</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> WINCH</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> INFO</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> USR1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> USR2</span></span></code></pre></div><h5 id="常见信号名称" tabindex="-1">常见信号名称 <a class="header-anchor" href="#常见信号名称" aria-label="Permalink to &quot;常见信号名称&quot;">​</a></h5><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">HUP</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">     1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    终端断线</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">INT</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">     2</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    中断（同</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Ctrl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> +</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> C）</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">QUIT</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    3</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    退出（同</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Ctrl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> +</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\）</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">TERM</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   15</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    终止</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">KILL</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    9</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    强制终止</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">CONT</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   18</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    继续（与STOP相反，</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> fg/bg命令）</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">STOP</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   19</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    暂停（同</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Ctrl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> +</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Z）</span></span></code></pre></div><p><strong>只有编号是9(SIGKILL)才可以无条件终止进程，其他信号进程都有权利忽略</strong></p><h4 id="得到指定信号的数值" tabindex="-1">得到指定信号的数值 <a class="header-anchor" href="#得到指定信号的数值" aria-label="Permalink to &quot;得到指定信号的数值&quot;">​</a></h4><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> kill -l KILL</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">## 输出</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">9</span></span></code></pre></div><h4 id="彻底杀死进程" tabindex="-1">彻底杀死进程 <a class="header-anchor" href="#彻底杀死进程" aria-label="Permalink to &quot;彻底杀死进程&quot;">​</a></h4><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> kill -9 pid</span></span></code></pre></div><h4 id="杀死指定用户所有进程" tabindex="-1">杀死指定用户所有进程 <a class="header-anchor" href="#杀死指定用户所有进程" aria-label="Permalink to &quot;杀死指定用户所有进程&quot;">​</a></h4><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> kill -9 </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">$(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ps -ef </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> grep 用户名</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">)</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> ## 过滤出用户名对应的进程并杀死</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> kill -u 用户名</span></span></code></pre></div>`,50),k=[l];function p(t,e,F,d,r,g){return a(),i("div",null,k)}const c=s(n,[["render",p]]);export{y as __pageData,c as default};
